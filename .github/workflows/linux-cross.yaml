name: linux-cross
on:
  pull_request:
    branches: [ master ]
  push:
    tags:
      - '*'

jobs:
  linux-cross:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python: [
          { version: '3.7', abi: 'cp37-cp37m' },
          { version: '3.8', abi: 'cp38-cp38' },
          { version: '3.9', abi: 'cp39-cp39' },
          { version: '3.10', abi: 'cp310-cp310' },
          { version: '3.11', abi: 'cp311-cp311' },
        ]
        target: [
          aarch64,
        ]
    steps:
    - uses: actions/checkout@v2
    - name: Build Wheels
      uses: messense/maturin-action@v1
      env:
        PYO3_CROSS_LIB_DIR: /opt/python/${{ matrix.python.abi }}
      with:
        maturin-version: v0.13.6
        target: ${{ matrix.target }}
        rust-toolchain: nightly-2022-10-25
        manylinux: auto
        args: -i python3.9 --release --strip --out dist
    - uses: uraimo/run-on-arch-action@v2
      name: Install built wheel
      with:
        arch: ${{ matrix.target }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y --no-install-recommends python3-dev python3-venv software-properties-common build-essential
          add-apt-repository ppa:deadsnakes/ppa
          apt-get update
          apt-get install -y curl python${{ matrix.python.version }}-dev python${{ matrix.python.version }}-venv
        run: |
          PYTHON=python${{ matrix.python.version }}
          $PYTHON -m venv venv
          venv/bin/pip install -U pip
          venv/bin/pip install -r test/requirements.txt
          venv/bin/pip install orjson_ddb --no-index --find-links dist/ --force-reinstall
          venv/bin/python -m pytest -s -rxX -v test
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-22.04
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux-cross ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: pip install "maturin>=0.13,<0.14"
      - name: deploy
        run: maturin upload --skip-existing --username "$MATURIN_USERNAME" *.whl
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
